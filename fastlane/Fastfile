# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:mac)

platform :mac do
  desc "setup lane. Configure environment variables, check if running on CI, etc."
  lane :setup do
    setup_ci if ENV['CI']

    # Configure notarization environment variable
    # see: https://github.com/fastlane/fastlane/issues/16095#issuecomment-623714214
    # In order to avoid having to set an envionment variable, we fetch the app specific password from the keychain:
    if !ENV['CI']
      # Notarization is currently not supported on CI (would just need to set another variable in GitHub UI, though)
      serviceName = "XCODE_NOTARIZE_PASSWORD"
      accountName = CredentialsManager::AppfileConfig.try_fetch_value(:apple_id)
      cmd = "security find-generic-password -a #{accountName} -s #{serviceName} -w -g | tr -d '\n'"   # Account name == email
      ENV["FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD"] = sh( command:cmd, log:false)
    end

    # Set Match environment variable
    if !ENV['CI']
      serviceName = "FASTLANE_MATCH_REPO_BASIC_AUTH"
      accountName = "SebastianWild"
      cmd = "security find-generic-password -a #{accountName} -s #{serviceName} -w -g | tr -d '\n'"   # Account name == GitHub username
      ENV["FASTLANE_MATCH_REPO_BASIC_AUTH"] = sh( command:cmd, log:false)
    end
  end

  desc "run tests"
  lane :test do
    setup

    match(git_basic_authorization: ENV["FASTLANE_MATCH_REPO_BASIC_AUTH"], readonly: is_ci)
    # TODO: Currently, Test target is configured to launch Transitions.app
    # This should not be needed as currently we just have pure logic test.
    # However all combinations tried so far error out with:
    # The scheme 'TransitionsTests' has nothing configured to build for Running and has no executable specified to Run. Edit the scheme to configure the Run action.
    run_tests(
      scheme: "TransitionsTests",
      destination: "platform=macOS"
    )
  end

  desc "archive the app, but do not create a DMG"
  lane :development do
    setup
    
    match(git_basic_authorization: ENV["FASTLANE_MATCH_REPO_BASIC_AUTH"], readonly: is_ci)

    gym(
      # For some reason, even though this is set in the Gymfile, this is ignored/overridden.
      # So we pass this explicitly
      export_method: "developer-id"
    )
  end

  desc "archive the app, notarize, and create a DMG"
  lane :release do
    setup

    match(git_basic_authorization: ENV["FASTLANE_MATCH_REPO_BASIC_AUTH"], readonly: is_ci)

    gym(
      # For some reason, even though this is set in the Gymfile, this is ignored/overridden.
      # So we pass this explicitly
      export_method: "developer-id"
    )
    
    notarize(
      package: ".build/Transitions.app",
      asc_provider: "MJGRJBXP25",    # see: https://github.com/fastlane/fastlane/issues/19686
      bundle_id: "dev.sebaswild.transitions",
      verbose: true
    )
    Dir.chdir("..") do
      sh "./BuildTools/create-dmg.sh"
    end
  end

  desc "Bump the version number"
  lane :bumpversion do |options|
    setup

    version = increment_version_number(
      bump_type: options[:bump_type] ||= "patch",
    )
    build = increment_build_number(build_number: 1)
    commit_version_bump(
      xcodeproj: "Transitions.xcodeproj",
      message: "Bump version to #{version} (build #{build})"
    )
  end

  desc "Bump the build number"
  lane :bumpbuild do
    setup

    version = get_version_number
    build = increment_build_number
    commit_version_bump(
      xcodeproj: "Transitions.xcodeproj",
      message: "Bump build to #{version} (build #{build})"
    )
  end
end
